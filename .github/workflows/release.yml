name: Release new version

on:
  workflow_dispatch:

jobs:
  release:
    name: Build and publish a release
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/${{ github.repository_owner }}/xdg-desktop-portal-build:latest
    permissions:
      contents: write
    steps:
      - name: Configure git user
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git config --global --add safe.directory /__w/xdg-desktop-portal/xdg-desktop-portal

      - name: Checkout the repository
        uses: actions/checkout@v4

      - name: Update translation files
        run: |
          meson setup . _build
          meson compile -C _build/ xdg-desktop-portal-update-po
          git add po/*po
          git commit -m "Update po files"
          git push
          git clean -fxd

      # - name: Build xdg-desktop-portal
      #   run: |
      #     meson setup . _build
      #     meson dist -C _build

      - name: Extract release information
        run: |
          # Extract the release version
          releaseVersion=`perl -0777nE 'print $& if /(?<=Changes in ).*/' NEWS`
          echo "releaseVersion=$releaseVersion" | tee -a $GITHUB_ENV

          # Extract the changelog
          {
            echo "releaseChangelog<<EOF"
            perl -0777nE 'print $& if /(?<=\n\n).*?(?=\n\n)/sg' NEWS
            echo -e "\nEOF"
          } | tee -a $GITHUB_ENV

          # Check if version is a pre-release
          preRelease=$((`echo $releaseVersion | cut -d '.' -f2` % 2))
          {
            echo -n "preRelease="
            if [ $preRelease = 1 ]; then
              echo "true";
            else
              echo "false";
            fi
          } | tee -a $GITHUB_ENV
          
      - name: Tag release
        run: |
          git tag $releaseVersion
          git push --tags

      - name: Create release
        uses: ncipollo/release-action@v1.13.0
        with:
          tag: ${{ env.releaseVersion }}
          body: ${{ env.releaseChangelog }}
          prerelease: ${{ env.preRelease }}
          #artifacts: _build/meson-dist/*

      - name: Update meson.build version
        run : |
          sed -ie "4s/'.*'/'$releaseVersion'/" meson.build
          git add meson.build
          git commit -am "Post-release version bump"
          git push
